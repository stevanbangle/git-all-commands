To initialise 
$git init

Set name and email
$git config --global user.name "Ram" 
$git config --global user.email "test@gmail.com"

For editing configuration
$git config --global -e

Adding remote repositories
$git remote add origin https://github.com/stevanbangle/practice.git

See the origin
$git remote -v

Set new remote url
$git remote set-url origin https://github.com/stevanbangle/practice.git

Send local repo to remote repo ( first time need to set up stream (-u))
$git push -u origin master

Check git status
$git status

Checking logs
$git log

logs in a line
$git log --oneline

Logs in reverse order
$git log --reverse

Send specific files 
$git add filename

Send all files from workspace to staging area
$git add .
$git add --all

Unstaging files ( undoing git add)
$git restore --staged filename

Diff:
Compare difference between workspace and staging area
$git diff

Compare difference between staged and repo
$git diff --staged
$git diff --staged HEAD

Compare difference between workspace and repo
$git diff HEAD

Comparing difference between commits
$git diff c7e34bb db2caf9

Merge conflict: A conflict arises when two separate branches have made edits to the same line in a file, or when a file has been deleted in one branch but edited in the other.

Generating ssh keys:
$ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
or else
$ssh-keygen and keep pressing enter.

Showing changes in the commit
$git show db2caf9

To see the changes made in file
$git annotate filename
 
To remove file from github
$git rm filename
$git commit -m "message"

Finding authors of the lines
$git blame filename

Branches:
List branches
$git branch

List all the branches
$git branch -a

Move to other branch
$git checkout branchname

Creating new branch
$git branch newbranchname

Deleting a branch (deletes if it is merged)
$git branch -d branchname 

Deleting a branch if it is not merged also(forcefully)
$git branch -D branchname 

Pushing branch to remote repo
$git push origin branchname

Viewing the merged branch
$git branch --merged

Viewing the unmerged branch
$git branch --no-merged

Merging:
$git checkout master*(*where we want to merge branch) then
$git merge branchname

Forking: It is used to copy other's repo to your account.

Tags: Giving tags for taging a commit id
$git tag v1.1
$git push origin v1.1

Tagging for specific commit
$git tag v2.2 c703fd84

Deleting a tag
$git tag -d tagname

Git ignore: to ignore the unwanted files for storing in repos.
$vi .gitignore
  *.cpp
  dir/
  filename

Git stash: stores all the most recent changes in a workspace and resets the state of the workspace to the prior commit state.
$git stash

To list
$git stash list

To take stashed area
$git stash pop

To delete stashed area
$git stash drop

To clear stash item 
$git stash clear

Git fetch: It will only update the remote repo to local repo.
$git fetch

Git fetch will not updage logs.after fetching to merger everything then use
$git merge

Git reset: To delete workspace or statging area
Remove files from worksapce  and staging area
$git reset --hard HEAD~1 #reverses from 3,2,1 (commit, staging and workspace)

$git reset --soft HEAD~1 #deletes from 3 to 2 (form commit and bring them to staging area)

$git reset HEAD~1 #reverses to 1 ( reverses to workspace)

Remove files from staging area
$git reset .

Revert: deleting a commit but indeed it will make a new commit.
$git revert commit-id

























